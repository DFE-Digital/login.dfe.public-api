name: $(BuildDefinitionName)_tag-$(BuildID)_at-$(Date:yyyyMMdd)$(Rev:.r)
resources:
  repositories:
  # Defult branch is master
    - repository: devopsTemplates
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.devops
      ref: main
    - repository: config
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.dsi-config
      ref: main

trigger:
  branches:
    include:
    - feature/*
    - develop
    - release/*

pr:
  branches:
    include:
    - develop

parameters:
- name: location
  type: object
  displayName: 'Deployment locations (- westeurope & - northeurope)'
  default:
    - westeurope
    - northeurope
- name: AppDeploy
  type: boolean
  displayName: 'App Deployment only'
  default: true
- name: InfrDeploy
  type: boolean
  displayName: 'Infrastrucure Deployment only'
  default: true
- name: tran
  type: boolean
  displayName: 'Transformation Deployment'
  default: false
- name: dev
  type: boolean
  displayName: 'Dev Deployment'
  default: false
- name: test
  type: boolean
  displayName: 'Test Deployment'
  default: false
- name: pp
  type: boolean
  displayName: 'Pre-Prod Deployment'
  default: false
- name: pr
  type: boolean
  displayName: 'Prod Deployment'
  default: false

variables:
- group: dsi-global
- name: applicationShortName
  value: 'papi'
- name: applicationFullName
  value: 'public-api'
- name: numberOfWorkers
  value: 1
- name: tran
  ${{ if eq(parameters.tran, 'true') }}:
    value: true
  ${{ else }}:
    value: false
- name: dev
  ${{ if or(eq(parameters.dev, 'true'), contains(variables['Build.SourceBranch'],'feature')) }}:
    value: true
  ${{ else }}:
    value: false
- name: test
  ${{ if or(eq(parameters.test, 'true'), contains(variables['Build.SourceBranch'],'develop')) }}:
    value: true
  ${{ else }}:
    value: false
- name: pp
  ${{ if or(eq(parameters.pp, 'true'), contains(variables['Build.SourceBranch'],'release')) }}:
    value: true
  ${{ else }}:
    value: false
- name: pr
  ${{ if or(eq(parameters.pr, 'true'), contains(variables['Build.SourceBranch'],'release')) }}:
    value: true
  ${{ else }}:
    value: false

stages:

# Code Scans & Build the artifact for deployment
- stage: scanBuildApp
  displayName: "Scan tools & Build"
  jobs:
    # Code scaning tools
  - ${{ if eq(parameters.InfrDeploy, 'true') }}:
    - template:  pipeline/checkov.yml@devopsTemplates

  - ${{ if eq(parameters.AppDeploy, 'true') }}:

    - template:  pipeline/eslint.yml@devopsTemplates

    - template:  pipeline/dependencyCheck.yml@devopsTemplates
      parameters:
        npmInstCmd: 'install --force --json --no-package-lock'

    - template: pipeline/build.yml@devopsTemplates
      parameters:
        applicationName: ${{variables.applicationFullName}}
        custRegAuth: $(custRegAuth)
        environmentNames:
          - ${{ if eq(variables.tran, 'true') }}:
            - tran
          - ${{ if eq(variables.dev, 'true') }}:
            - dev
          - ${{ if eq(variables.test, 'true') }}:
            - test
          - ${{ if eq(variables.pp, 'true') }}:
            - pp
          - ${{ if eq(variables.pr, 'true') }}:
            - pr
        pm2ProcessFileName: process.json
        nodeVersionSpec: '18.17.0'
        npmInstCmd: 'install --force --json --no-package-lock'
        npmPruneFixCmd: 'install --production --json --force --no-package-lock'


- ${{ each location in parameters.location }}:
  - ${{ each var in variables }}:
    - ${{ if in(var.key, 'tran','dev','test','pp','pr') }}:
      - ${{ if eq(var.value, 'true') }}:
        - ${{ if or(and(in(var.key, 'tran','pp','pr'),eq(location, 'northeurope')),and(in(var.key, 'tran','dev','test','pp','pr'),eq(location, 'westeurope'))) }}:
          - stage: Deployment_${{var.key}}_${{location}}
            displayName: "Deployment [${{var.key}}] ${{location}}"
            ${{ if eq(location,'westeurope') }}:
              ${{ if eq(var.key,'pr') }}:
                dependsOn: 
                - scanBuildApp
                - Deployment_pp_${{location}}
                condition: and(in(dependencies.scanBuildApp.result, 'Succeeded', 'Skipped'),in(dependencies.Deployment_pp_westeurope.result, 'Succeeded', 'Skipped'))
              ${{ else }}:
                dependsOn: 
                - scanBuildApp
                condition: in(dependencies.scanBuildApp.result, 'Succeeded', 'Skipped')
            ${{ if eq(location,'northeurope') }}:
              ${{ if eq(length(parameters.location), 2) }}:
                dependsOn: 
                - scanBuildApp
                - Deployment_${{var.key}}_westeurope
                condition: in(dependencies.scanBuildApp.result, 'Succeeded', 'Skipped')
              ${{ else }}:
                dependsOn: 
                - scanBuildApp
                condition: in(dependencies.scanBuildApp.result, 'Succeeded', 'Skipped')
            variables:
            - group: dsi-${{var.key}}-kv
            jobs:
            - ${{ if parameters.InfrDeploy }}:
              - template: pipeline/appInfrastructure.yml@devopsTemplates
                parameters:
                  ${{ if or(eq(var.key, 'dev'), eq(var.key, 'tran')) }}:
                    serviceConnection: $(devServiceConnection)
                  ${{ elseif eq(var.key, 'pr') }}:
                    serviceConnection: $(prodServiceConnection)
                  ${{ else }}:
                    serviceConnection: $(testServiceConnection)
                  environmentName: ${{var.key}}
                  applicationShortName: ${{variables.applicationShortName}}
                  applicationFullName: ${{variables.applicationFullName}}
                  AppDeploy: ${{parameters.AppDeploy}}
                  deploymentLocation: ${{location}}
                  runtimeStack: NODE|18-lts


            - ${{ if parameters.AppDeploy }}:
              - template: pipeline/deploy.yml@devopsTemplates
                parameters: 
                  ${{ if or(eq(var.key, 'dev'), eq(var.key, 'tran')) }}:
                    serviceConnection: $(devServiceConnection)
                  ${{ elseif eq(var.key, 'pr') }}:
                    serviceConnection: $(prodServiceConnection)
                  ${{ else }}:
                    serviceConnection: $(testServiceConnection)
                  environmentName: ${{var.key}}
                  applicationFullName: ${{variables.applicationFullName}}
                  applicationShortName: ${{variables.applicationShortName}}
                  releaseArtifactName: ${{variables.applicationShortName}}-${{var.key}}-$(Build.BuildId)-release
                  InfrDeploy: ${{parameters.InfrDeploy}}
                  deploymentLocation: ${{location}}
                  runtimeStack: NODE|18-lts
                  pm2ProcessFileName: process.json
    