name: $(BuildDefinitionName)_tag-$(BuildID)_at-$(Date:yyyyMMdd)$(Rev:.r)
resources:
  repositories:
    # Defult branch is master
    - repository: devopsTemplates
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.devops
      ref: main
    - repository: config
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.dsi-config
      ref: main

trigger:
  branches:
    include:
      - feature/*
      - main
      - release/*

pr:
  branches:
    include:
      - main

parameters:
  - name: location
    type: object
    displayName: "Deployment locations (- westeurope & - northeurope)"
    default:
      - westeurope
      - northeurope
  - name: InfrDeploy
    type: boolean
    displayName: "Infrastrucure Deployment only"
    default: false
  - name: tran
    type: boolean
    displayName: "Transformation Deployment"
    default: false
  - name: dev
    type: boolean
    displayName: "Dev Deployment"
    default: false
  - name: test
    type: boolean
    displayName: "Test Deployment"
    default: false
  - name: pp
    type: boolean
    displayName: "Pre-Prod Deployment"
    default: false
  - name: pr
    type: boolean
    displayName: "Prod Deployment"
    default: false
  - name: gitCheck
    type: boolean
    displayName: "Bypass Git Check in Test"
    default: false

variables:
  - group: dsi-global
  - group: dsi-envs-list
  - name: applicationShortName
    value: "papi"
  - name: applicationFullName
    value: "public-api"
  - name: numberOfWorkers
    value: 1
  - name: tran
    value: ${{ eq(parameters.tran, 'true') }}
  - name: dev
    value: ${{ or(eq(parameters.dev, 'true'), contains(variables['Build.SourceBranch'],'feature')) }}
  - name: test
    value: ${{ or(eq(parameters.test, 'true'), contains(variables['Build.SourceBranch'],'feature')) }}
  - name: pp
    value: ${{ and(or(eq(parameters.pp, 'true'), contains(variables['Build.SourceBranch'],'main')), not(contains(variables['Build.SourceVersionMessage'],'Upgrade to version'))) }}
  - name: pr
    value: ${{ or(eq(parameters.pr, 'true'), contains(variables['Build.SourceBranch'],'release')) }}
  - name: northeurope
    value: "tran,pp,pr"
  - name: westeurope
    value: "tran,dev,test,pp,pr"

stages:
  # Code Scans & Build the artifact for deployment
  - stage: scanBuildApp
    displayName: "Scan tools & Build"
    jobs:
      - template: pipeline/scanTools.yml@devopsTemplates
        parameters:
          useRevisedLinting: true
          AppDeploy: ${{ not(parameters.InfrDeploy) }}

      - ${{ if not(eq(parameters.InfrDeploy, 'true')) }}:
          - template: pipeline/build.yml@devopsTemplates
            parameters:
              applicationName: ${{variables.applicationFullName}}
              custRegAuth: $(custRegAuth)
              environmentNames:
                - ${{ if eq(variables.tran, 'true') }}:
                    - tran
                - ${{ if eq(variables.dev, 'true') }}:
                    - dev
                - ${{ if eq(variables.test, 'true') }}:
                    - test
                - ${{ if eq(variables.pp, 'true') }}:
                    - pp
                - ${{ if eq(variables.pr, 'true') }}:
                    - pr
              pm2ProcessFileName: process.json
              nodeVersionSpec: "18.17.0"
              useRevisedLinting: true

  - ${{ each location in parameters.location }}:
      - ${{each env in split(variables[location],',') }}:
          - ${{ if eq(variables[env], 'true') }}:
              - stage: Deployment_${{env}}_${{location}}
                displayName: "Deployment [${{env}}] ${{location}}"
                ${{ if eq(location,'westeurope') }}:
                  dependsOn:
                    - scanBuildApp
                  condition: in(dependencies.scanBuildApp.result, 'Succeeded', 'Skipped')
                ${{ if eq(location,'northeurope') }}:
                  ${{ if eq(length(parameters.location), 2) }}:
                    dependsOn:
                      - scanBuildApp
                      - Deployment_${{env}}_westeurope
                    condition: in(dependencies.scanBuildApp.result, 'Succeeded', 'Skipped')
                  ${{ else }}:
                    dependsOn:
                      - scanBuildApp
                    condition: in(dependencies.scanBuildApp.result, 'Succeeded', 'Skipped')
                variables:
                  - name: secRegionId
                    value: $(${{ format('{0}{1}', location, 'Id') }})
                  - name: environmentId
                    value: $[variables['${{env}}EnvId']]
                  - name: ServConName
                    value: ${{ format('{0}{1}', env, 'ServCon') }}
                  - name: ShaCodeName
                    value: ${{ format('{0}{1}', env, 'ShaCode') }}
                jobs:
                  - template: pipeline/deployment.yml@devopsTemplates
                    parameters:
                      serviceConnection: $(${{variables.ServConName}})
                      # shaPool: $[variables['${{env}}ShaPool']]
                      # shaCode: $(${{variables.ShaCodeName}})
                      devOpsEnv: ${{variables.secRegionId}}${{env}}
                      environmentName: ${{env}}
                      applicationShortName: ${{variables.applicationShortName}}
                      applicationFullName: ${{variables.applicationFullName}}
                      releaseArtifactName: ${{variables.applicationShortName}}-${{env}}-$(Build.BuildId)-release
                      InfrDeploy: ${{parameters.InfrDeploy}}
                      deploymentLocation: ${{location}}
                      runtimeStack: NODE|18-lts
                      pm2ProcessFileName: process.json
                      gitCheck: ${{parameters.gitCheck}}

              - ${{ if and(eq(env, 'pp'),eq(location, 'westeurope')) }}:
                  - stage: releasebranch
                    displayName: "GitHub Release Branch Creation"
                    dependsOn:
                      - Deployment_${{env}}_${{location}}
                    jobs:
                      - template: pipeline/releaseCreation.yml@devopsTemplates

              - ${{ if and(eq(env, 'pr'),eq(location, 'westeurope')) }}:
                  - stage: branchPrTag
                    displayName: "GitHub PR & Release Branch Tag"
                    dependsOn:
                      - Deployment_${{env}}_${{location}}
                    jobs:
                      - template: pipeline/tagCreation.yml@devopsTemplates
                        parameters:
                          applicationName: ${{variables.applicationFullName}}
